#!/bin/bash
# This script generates ROC plots from csv files with the following format:
# parameter_name, parameter_value, true_positives, false_positives, true_negatives, false_negatives
# Data is separated into multiple curves by parameter name.
# *In order to run this you must have R the statistical programming language*
R --vanilla --slave << "EOF" # Pipe all subsequent lines into R. 

alldata<-read.csv("my_data.csv",header=TRUE)
parameter_names = names(summary(alldata$parameter_name))
my_rainbow = topo.colors(length(parameter_names))
png(filename = "ROC_plot.png", width= 2048, height=2048, res=300)
plot(c(0,1), c(0,1), type="l", col='red', pch=22, lty=2, xlab="False positive rate",
		ylab="True positive rate", main="Bubble Classification ROC curves") #, main=paste("Varying Parameter:", parameter_name)
legend("bottomright", parameter_names, lty=c(1,1), lwd=c(2.5,2.5),col= my_rainbow[1:length(parameter_names)])

i=1 #this is counter is used to iterate though different line colors in my_rainbow
for(parameter_name in parameter_names){
	pdata = alldata[alldata[,1]==parameter_name,]
	sensitivities = pdata$true_positives / (pdata$true_positives + pdata$false_negatives)
	specificities = pdata$true_negatives / (pdata$true_negatives + pdata$false_positives)
	false_postive_rate = 1-specificities
	point_order = sort(false_postive_rate, index.return = TRUE)$ix
	lines(false_postive_rate[point_order], sensitivities[point_order], col=my_rainbow[i])
	points(false_postive_rate[point_order], sensitivities[point_order], col=heat.colors(nrow( pdata ))[point_order])
	i=i+1
}
dev.off()
EOF
